name: CI

env:
  # 7 GiB by default on GitHub, setting to 6 GiB
  # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
  NODE_OPTIONS: --max-old-space-size=6144

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node_version: [12, 14, 16]
        include:
          - os: windows-latest
            node_version: 14
      fail-fast: false

    name: 'Build&Test: node-${{ matrix.node_version }}, ${{ matrix.os }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}

      - name: Get yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Set dependencies cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.node_version }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node_version }}-${{ hashFiles('yarn.lock') }}
            ${{ runner.os }}-${{ matrix.node_version }}-
      - name: Versions
        run: yarn versions

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build vite
        run: yarn build

  lint:
    runs-on: ubuntu-latest
    name: 'Lint: node-14, ubuntu-latest'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set node version to 14
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Set dependencies cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: lint-dependencies-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            lint-dependencies-${{ hashFiles('yarn.lock') }}
            lint-dependencies-
      - name: Prepare
        run: |
          yarn install --frozen-lockfile
          yarn build
      - name: Lint
        run: yarn lint
  merge: 
    needs: build
    if: github.actor == 'vixduong' ||  startsWith(github.actor, 'dependabot')
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: automerge
        uses: "pascalgn/automerge-action@v0.13.1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  release: 
    needs: merge
    if: github.actor == 'vixduong' || startsWith(github.actor, 'dependabot')

    runs-on: ubuntu-latest

    steps:
      - id: contributor 
        run: echo ::set-output name=release::minor
        if: github.actor == 'vixduong'

      - id: bot
        run: echo ::set-output name=release::patch
        if: startsWith(github.actor, 'dependabot')

      - uses: actions/checkout@v2
        with:
          ref: master

      - run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
  
      - uses: phish108/autotag-action@1.1.37
        id: tagger
        env:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          bump: ${{ steps.contributor.outputs.release || steps.bot.outputs.release }}
          dry-run: 'true'

      - run: | 
          npm --no-git-tag-version --allow-same-version version "${{ steps.tagger.outputs.new-tag }}"
          git commit -m "version bump to ${{ steps.tagger.outputs.new-tag }}" -a

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: phish108/autotag-action@1.1.37
        env:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          bump: ${{ steps.contributor.outputs.release || steps.bot.outputs.release }}
          with-v: true